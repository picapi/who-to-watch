{"version":3,"sources":["components/streamer_card.js","helpers/history.js","components/history_display.js","helpers/selection.js","components/change_list.js","App.js","reportWebVitals.js","index.js"],"names":["StreamerCard","activeKey","tabs","this","props","streamer","streams","twitch","push","Tab","eventKey","name","title","Ratio","aspectRatio","url","width","height","youtube","links","Object","keys","item","Button","target","href","Card","Body","Title","description","Stack","direction","gap","Tabs","defaultActiveKey","className","React","Component","storage","window","sessionStorage","getOrCreateStorage","path","data","JSON","parse","getItem","history","seen","current","Set","saveStorage","newstorage","setItem","stringify","saveSeenPool","seen_pool","new_pool","length","add","sortPools","all_items","unseen_pool","has","HistoryDisplay","handleClose","setState","show","handleShow","state","data_path","history_links","onClick","e","preventDefault","link_function","Nav","Link","Modal","onHide","Header","closeButton","clearHistory","shuffle","array","i","j","Math","floor","random","temp","ChangeListDisplay","value","handleChange","bind","handleSubmit","event","searchParams","URLSearchParams","set","console","log","toString","location","search","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","variant","type","urlParams","App","error","isLoaded","loaded_data","get","fetch","then","res","json","result","entries","results","filter","pop","getCurrent","splice","indexOf","meta","selected_streamer","all_streamers","message","at","addToHistory","setCurrent","content","Container","Navbar","fixed","bg","Brand","x","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff5aa24f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, Tab, Tabs, Ratio, Button, Stack } from 'react-bootstrap';\r\nimport { Twitch, Youtube } from 'react-bootstrap-icons'\r\nimport ReactPlayer from 'react-player'\r\n\r\n\r\nclass StreamerCard extends React.Component {\r\n\r\n\r\n    render() {\r\n        var activeKey;\r\n        var tabs = [];\r\n        if(this.props.streamer.streams.twitch != null){\r\n            tabs.push(\r\n                <Tab eventKey={\"twitch-\"+this.props.streamer.name} title={<Twitch/>}>\r\n                    <Ratio aspectRatio=\"16x9\">\r\n                        <ReactPlayer url={this.props.streamer.streams.twitch} width='100%' height='100%' />\r\n                    </Ratio>\r\n                </Tab>\r\n            )\r\n            if (activeKey == null){activeKey = \"twitch-\"+this.props.streamer.name;}\r\n        }\r\n\r\n        if(this.props.streamer.streams.youtube != null){\r\n            tabs.push(\r\n                <Tab eventKey={\"youtube-\"+this.props.streamer.name} title={<Youtube/>}>\r\n                    <Ratio aspectRatio=\"16x9\">\r\n                    <ReactPlayer url={this.props.streamer.streams.youtube} width='100%' height='100%' />\r\n                    </Ratio>\r\n                </Tab>\r\n            )\r\n            if (activeKey == null){activeKey = \"youtube-\"+this.props.streamer.name;}\r\n        }\r\n\r\n        if(this.props.streamer.links){\r\n            var links = [];\r\n            for(var item of Object.keys(this.props.streamer.links)){\r\n                links.push(<Button target=\"_blank\" href={this.props.streamer.links[item]}>{item}</Button>);\r\n            }\r\n        }\r\n\r\n      return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>{this.props.streamer.name}</Card.Title>\r\n                <p>{this.props.streamer.description}</p>\r\n                <Stack direction=\"horizontal\" gap={3}>{links}</Stack>\r\n                <Tabs defaultActiveKey={activeKey} activeKey={activeKey} className=\"mb-3\">\r\n                    {tabs}\r\n                </Tabs>\r\n\r\n            </Card.Body>\r\n        </Card>\r\n      );\r\n    };\r\n  }\r\n\r\nexport default StreamerCard;","const storage = window.sessionStorage;\r\n\r\nfunction getOrCreateStorage(path){\r\n    var data = JSON.parse(storage.getItem(path))    \r\n    if(data == null){\r\n        data = {history: [], seen: [], current: null}\r\n    }\r\n    data.seen = new Set(data.seen);\r\n    return data;\r\n}\r\n\r\nfunction saveStorage(path,newstorage){\r\n    newstorage.seen = [...newstorage.seen];\r\n    storage.setItem(path,JSON.stringify(newstorage))\r\n}\r\n\r\nexport function addToHistory(path, name){\r\n    var data = getOrCreateStorage(path);\r\n    console.log(Object.keys(data));\r\n    if(data.history.at(-1) !== name){\r\n        data.history.push(name);\r\n        saveStorage(path,data);\r\n    }\r\n}\r\n\r\nexport function addToSeen(path, name){\r\n    var data = getOrCreateStorage(path);\r\n    data.seen.add(name);\r\n    saveStorage(path,data);\r\n}\r\n\r\nexport function getHistory(path){\r\n    var data = getOrCreateStorage(path);\r\n    return data.history;\r\n}\r\n\r\nexport function getSeen(path){\r\n    var data = getOrCreateStorage(path);\r\n    return data.seen;\r\n}\r\n\r\nexport function hasSeen(path, value){\r\n    var data = getOrCreateStorage(path);\r\n    return data.seen.has(value);\r\n}\r\n\r\nexport function clearHistory(path){\r\n    var data = getOrCreateStorage(path);\r\n    data.history = [];\r\n    saveStorage(path,data);\r\n}\r\n\r\n\r\nexport function clearAll(path){\r\n    storage.removeItem(path)\r\n}\r\n\r\nexport function setCurrent(path,streamer){\r\n    var data = getOrCreateStorage(path);\r\n    data.current = streamer.name;\r\n    saveStorage(path,data);\r\n}\r\n\r\nexport function getCurrent(path, results){\r\n    var data = getOrCreateStorage(path);\r\n    results = results.filter(item => {return item.name === data.current})\r\n    if (results.length === 1){return results.pop()}\r\n    else {return null;}\r\n}\r\n\r\nexport function clearCurrent(path,name){\r\n    var data = getOrCreateStorage(path);\r\n    data.current = null;\r\n    saveStorage(path,data);\r\n}\r\n\r\nexport function saveSeenPool(path,seen_pool){\r\n    var data = getOrCreateStorage(path);\r\n    const new_pool = new Set();\r\n    if(seen_pool.length > 0){\r\n        for(var item of seen_pool){new_pool.add(item.name)}\r\n    }\r\n    data.seen = new_pool\r\n    saveStorage(path,data);\r\n}\r\n\r\n\r\nexport function sortPools(path, all_items){\r\n    var unseen_pool = [];\r\n    var seen_pool = [];\r\n    var data = getOrCreateStorage(path);\r\n    for (var item of all_items) {\r\n      if (data.seen.has(item.name)) {\r\n        seen_pool.push(item)\r\n      } else {\r\n        unseen_pool.push(item)\r\n      }\r\n    }\r\n    return {unseen_pool, seen_pool}\r\n}","import React from 'react';\r\nimport { Button, Modal, Nav } from 'react-bootstrap';\r\nimport { getHistory, clearHistory } from '../helpers/history';\r\n\r\nclass HistoryDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          show: false,\r\n        };\r\n      }\r\n\r\n\r\n    handleClose = () => this.setState({show: false});\r\n    handleShow = () => this.setState({show: true});\r\n\r\n    render() {\r\n        var history = getHistory(this.props.data_path);\r\n        var history_links = []\r\n        for(const item of history){\r\n            history_links.push(<><a href=\"#\" onClick={(e) => {e.preventDefault(); this.props.link_function(item); this.handleClose()}}>{item}</a><br/></>)\r\n        }\r\n        return <>\r\n        <Nav.Link href=\"#\" onClick={this.handleShow}>Watch History</Nav.Link>\r\n            <Modal show={this.state.show} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Watch History</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body><p>Click on a stream below to watch them again!</p>\r\n                    {history_links}\r\n                    <Button\r\n                    onClick={() => { \r\n                        clearHistory(this.props.data_path);\r\n                        this.handleClose();\r\n                    }}\r\n                >Clear History</Button>\r\n                </Modal.Body>\r\n            </Modal>\r\n            </>\r\n    }\r\n}\r\n\r\nexport default HistoryDisplay;","export const shuffle = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      const temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n    return array\r\n  }","import React from 'react';\r\nimport { Button, Modal, Nav, Form,  } from 'react-bootstrap';\r\n\r\nclass ChangeListDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          show: false,\r\n          value: props.data_path\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        var searchParams = new URLSearchParams();\r\n        searchParams.set(\"list\", this.state.value)\r\n        console.log(searchParams.toString())\r\n        window.location.search = searchParams.toString();\r\n      }\r\n\r\n    handleClose = () => this.setState({show: false});\r\n    handleShow = () => this.setState({show: true});\r\n\r\n    render() {\r\n        return <>\r\n        <Nav.Link href=\"#\" onClick={this.handleShow}>Change List</Nav.Link>\r\n            <Modal show={this.state.show} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Change List</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body><p>Input a URL below to use that list on this page. Warning: Invalid URLs may cause issues.</p>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formpath\">\r\n                        <Form.Label>URL</Form.Label>\r\n                        <Form.Control placeholder=\"lists/mcc-rising.json\" value={this.state.value} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                    </Form>\r\n                    <p>You can also use some of the lists we've pre-created!</p>\r\n                    <Button href=\"?list=lists/mcc-rising.json\">MCC Rising</Button>\r\n                </Modal.Body>\r\n            </Modal>\r\n            </>\r\n    }\r\n}\r\n\r\nexport default ChangeListDisplay;","import './App.css';\nimport React from 'react';\nimport { Nav, Navbar, Container, Stack, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport StreamerCard from './components/streamer_card';\nimport HistoryDisplay from './components/history_display';\nimport { addToHistory, getCurrent, setCurrent, sortPools, saveSeenPool} from './helpers/history';\nimport { shuffle } from './helpers/selection';\nimport ChangeListDisplay from './components/change_list';\nconst urlParams = new URLSearchParams(window.location.search);\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      loaded_data: null\n    };\n  }\n\n  componentDidMount() {\n    var path = urlParams.get(\"list\")\n    if(path == null){\n      path = \"lists/mcc-rising.json\"\n    }\n    fetch(path)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          // Create our pools\n          let {unseen_pool, seen_pool} = sortPools(path, result.entries);\n          console.log(seen_pool)\n          unseen_pool = shuffle(unseen_pool)\n          // Get the current stream\n          var current = getCurrent(path, unseen_pool)\n          if (current == null) {\n            current = unseen_pool.pop()\n          } else {\n            unseen_pool.splice(unseen_pool.indexOf(current),1)\n          }\n          this.setState({\n            isLoaded: true,\n            data_path: path,\n            meta: result.meta,\n            seen_pool: seen_pool,\n            unseen_pool: unseen_pool,\n            selected_streamer: current,\n            all_streamers: result.entries\n          });\n\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, data_path, isLoaded, meta, seen_pool, unseen_pool, selected_streamer, all_streamers } = this.state;\n    if (error) {\n      return <div>Error: {error.message}<br/><a href=\"/\">Back to safety</a></div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      saveSeenPool(data_path,seen_pool)\n      if (selected_streamer != null) {\n        addToHistory(data_path, selected_streamer.name);\n        setCurrent(data_path, selected_streamer)\n        var content = <StreamerCard streamer={selected_streamer}></StreamerCard>\n      } else {\n        var content = <div><h1>You've gone through every streamer in the list!</h1>\n          <Button\n            onClick={() => { \n              saveSeenPool(data_path,[])\n              let {unseen_pool, seen_pool} = sortPools(data_path, all_streamers);\n              unseen_pool = shuffle(unseen_pool)\n              var current = unseen_pool.pop()\n              this.setState({\n                seen_pool: seen_pool,\n                unseen_pool: unseen_pool,\n                selected_streamer: current,\n              });\n             }}\n          >Reset pool</Button>\n        </div>\n      }\n      return (\n        <div>\n          <Stack gap={3}>\n            <Container>\n              <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\n                <Container>\n                  <Navbar.Brand href=\"\">who-to-watch</Navbar.Brand>\n                  <Nav className=\"me-auto\">\n                  <HistoryDisplay data_path={data_path} link_function={(name) => this.setState({selected_streamer: all_streamers.filter(x => x.name == name).pop()})} ></HistoryDisplay>\n                  <ChangeListDisplay data_path={data_path}>Change List</ChangeListDisplay>\n                  </Nav>\n                </Container>\n              </Navbar>\n            </Container>\n            <Container>\n              <h1>{meta.name}</h1>\n              <p>{meta.description}</p>\n              <Stack direction=\"horizontal\" gap={3}><Button\n                onClick={() => { seen_pool.push(selected_streamer);\n                  this.setState({\n                  seen_pool: seen_pool,\n                  selected_streamer: unseen_pool.pop(),\n                  unseen_pool: shuffle(unseen_pool)\n                })}}\n              >Next stream</Button>{unseen_pool.length} left\n\n              </Stack>\n                {content}\n            </Container>\n          </Stack>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}